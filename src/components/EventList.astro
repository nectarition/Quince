---
import { type QuinceEvent } from "@types";
import eventLib from "../libs/event";
import dateLib from "../libs/date";

export interface Props {
  today: Date;
  events: QuinceEvent[];
}

const { events, today } = Astro.props;
---

<div class="cardRack">
  {
    events.map((e) => {
      const span = Math.floor(dateLib.getSpan(e.date, today) / 86400000);
      const eventType = eventLib.convertEventType(e.eventType);

      return (
        <div class="card" style={`border-left: 8px solid ${eventType.color}`}>
          <div
            class={`card_dateArea_wrap ${(span > 0 && span <= 10 && "card_dateArea_wrap-near") ?? ""}`}
          >
            <div class="card_dateArea_container">
              <div class="card_dateArea_year">
                {dateLib.format(e.date, "YYYY.")}
              </div>
              <div class="card_dateArea_date">
                {dateLib.format(e.date, "M.D(ddd)")}
              </div>
              {span > 0 && (
                <div class="card_dateArea_count">
                  <small>あと</small>
                  <b>{span}</b>
                  <small>日</small>
                </div>
              )}
            </div>
          </div>
          <div class="card_labelArea">
            <span class="label" style={`background-color: ${eventType.color}`}>
              {eventType.name}
            </span>
          </div>
          <div class="card_eventArea">
            <div class="card_eventArea_genre">
              {eventLib.convertGenre(e.genreType)}
            </div>
            <div class="card_eventArea_name">
              <a href={e.websiteURL} target="_blank">
                <b>{e.name}</b>
              </a>
            </div>
          </div>
          <div class="card_placeArea">
            <div class="card_placeArea_place">
              <span class="label">
                {eventLib.getPrefecture(e.place.address)}
              </span>
              {e.place.name}
            </div>
            <div class="card_placeArea_placeDetail">
              <a
                href={`https://www.google.co.jp/maps/search/${encodeURIComponent(
                  e.place.address
                )}`}
                target="_blank"
              >
                〒{eventLib.convertPostalCode(e.place.postalCode)}{" "}
                {e.place.address}
              </a>
            </div>
          </div>
          <div class="card_remarksArea">
            <div class="card_remarksArea_remarks">備考: {e.remarks}</div>
            <div class="card_remarksArea_organizer">
              運営: {e.organizer.name}
            </div>
          </div>
        </div>
      );
    })
  }
</div>

<style lang="scss">
  .cardRack {
    margin-bottom: 20px;

    display: flex;
    flex-flow: row;
    flex-wrap: wrap;
    gap: 10px;

    &:last-child {
      margin-bottom: 0;
    }
  }

  .card {
    padding: 10px;
    background-color: var(--background-color);
    display: grid;
    width: 100%;
    grid-template-columns: 100px 1fr 1fr;
    grid-template-rows: auto auto auto;
    gap: 5px 10px;

    @media screen and (max-width: 840px) {
      width: calc(100% / 2 - 5px);
      grid-template-columns: 1fr;
      grid-template-rows: auto auto auto auto auto;
    }

    @media screen and (max-width: 840px) {
      width: 100%;
    }

    &_dateArea {
      &_wrap {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #e0e0e0;
        grid-row: 1 / 4;

        &-near {
          background-color: #f5a5a5;
        }

        @media screen and (max-width: 840px) {
          grid-column: 1;
          grid-row: 3;
          display: block;
        }
      }
      &_container {
        padding: 10px;
        text-align: center;

        @media screen and (max-width: 840px) {
          text-align: left;
        }
      }
      &_year {
        font-size: 0.8em;
      }
      &_date {
        font-weight: bold;
      }

      @media screen and (max-width: 840px) {
        &_year,
        &_date,
        &_count {
          display: inline;
        }
      }
    }

    &_labelArea {
      grid-column: 2;
      grid-row: 1;

      @media screen and (max-width: 840px) {
        grid-column: 1;
        grid-row: 1;
      }
    }

    &_eventArea {
      grid-column: 2 / 4;
      grid-row: 2;

      @media screen and (max-width: 840px) {
        grid-column: 1;
        grid-row: 2;
      }

      &_genre {
        font-size: 0.8em;
      }
      &_name {
        font-weight: bold;
        font-size: 1.25em;
      }
    }

    &_placeArea {
      grid-column: 2;
      grid-row: 3;

      @media screen and (max-width: 840px) {
        grid-column: 1;
        grid-row: 4;
      }

      &_place {
      }
      &_placeDetail {
        font-size: 0.8em;
      }
    }

    &_remarksArea {
      grid-column: 3;
      grid-row: 3;

      @media screen and (max-width: 840px) {
        grid-column: 1;
        grid-row: 5;
      }

      &_remarks {
        font-size: 0.8em;
      }
      &_organizer {
        font-size: 0.8em;
      }
    }
  }

  .label {
    display: inline-block;
    background-color: #404040;
    color: #ffffff;
    padding: 2px 10px 3px;
    font-size: 0.8em;
  }
</style>
